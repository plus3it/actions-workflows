name: Create GitHub Release

on:
  # Run as a reusable workflow
  workflow_call:
    inputs:
      mockstacktest-enable:
        description: Controls whether to run the mockstacktest job
        default: true
        required: false
        type: boolean
      mockstacktest-pytest-args:
        description: Passes PYTEST_ARGS to mockstacktest
        default: -v
        required: false
        type: string
      tardigradelint-target:
        description: Name of the Tardigrade-CI Makefile target to run
        default: lint
        required: false
        type: string
    secrets:
      release-token:
        description: Token with permissions to create GitHub Releases
        required: true

jobs:
  lint:
    uses: ./.github/workflows/lint.yml
    with:
      tardigradelint-target: ${{ inputs.tardigradelint-target }}

  test:
    uses: ./.github/workflows/test.yml
    with:
      mockstacktest-enable: ${{ inputs.mockstacktest-enable }}
      mockstacktest-pytest-args: ${{ inputs.mockstacktest-pytest-args }}

  release:
    needs:
      - lint
      - test
    # The test workflow is optional, and may be "skipped". The release should be
    # created as long as the test does not fail. See also:
    #   <https://samanpavel.medium.com/github-actions-conditional-job-execution-e6aa363d2867>
    if: |
      always() &&
      needs.lint.result == 'success' &&
      (needs.test.result == 'success' || needs.test.result == 'skipped')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0
      - run: git fetch --tags --force origin  # WA: https://github.com/actions/checkout/issues/882

      - name: Test release condition
        id: release
        run: |
          set -eu -o pipefail
          RELEASE=false
          PRIOR_VERSION=$(git describe --abbrev=0 --tags || true)
          RELEASE_VERSION=$(grep -E "current_version\s*=" .bumpversion.cfg | sed 's/^.*= //' )
          if [[ "$PRIOR_VERSION" != "$RELEASE_VERSION" ]]; then RELEASE=true; fi
          echo "condition=${RELEASE}"
          echo "version=${RELEASE_VERSION}"
          echo "condition=${RELEASE}" >> "$GITHUB_OUTPUT"
          echo "version=${RELEASE_VERSION}" >> "$GITHUB_OUTPUT"

      - name: Create release
        if: steps.release.outputs.condition == 'true'
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631
        with:
          name: ${{ steps.release.outputs.version }}
          tag_name: ${{ steps.release.outputs.version }}
          generate_release_notes: true
          target_commitish: ${{ github.sha }}
          token: ${{ secrets.release-token }}
