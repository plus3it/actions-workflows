name: Run salt formula tests on Linux

on:
  workflow_call:
    inputs:
      salt-os-version:
        description: OS version to run salt tests on
        required: true
        type: number
      salt-state:
        description: Salt state to execute
        required: true
        type: string
      salt-pillar-root:
        description: Relative paths to the salt pillar to test
        required: true
        type: string
      salt-repo-version:
        description: Version of the salt repo file to install, used to template `salt-repo-url`
        default: v1.3.4
        type: string
      salt-repo-url:
        description: URL to the salt repo file, `salt-repo-version` is templated as `{0}`
        default: https://github.com/saltstack/salt-install-guide/releases/download/{0}/salt.repo
        type: string
      salt-requirements-files:
        description: Space-separated list of paths to requirements files installed by yum, `salt-os-version` is templated as `{0}`
        default: ./tests/requirements.txt ./tests/requirements-el{0}.txt
        type: string
      salt-python-requirements-files:
        description: Space-separated list of paths to python requirements files installed by salt-pip, `salt-os-version` is templated as `{0}`
        default: ''
        type: string

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: >-
        ${{ fromJson('{
          8: "docker.io/library/almalinux:8",
          9: "docker.io/library/almalinux:9"
        }')[inputs.salt-os-version] }}
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup
        - ${{ github.workspace }}:${{ github.workspace }}
      options: --privileged
    env:
      SALT_REPO_URL: ${{ format(inputs.salt-repo-url, inputs.salt-repo-version) }}
    steps:
      - name: Clone this git repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      # Install salt
      - run: touch /etc/fstab
      - run: curl -sSL -o /etc/yum.repos.d/salt.repo ${{ env.SALT_REPO_URL }}
      - run: >-
          mapfile -t REQUIREMENTS < <(cat ${{ format(inputs.salt-requirements-files, inputs.salt-os-version) }}) &&
          yum install -y "${REQUIREMENTS[@]}"

      - run: salt-call --versions-report

      # Install salt python requirements
      - if: inputs.salt-python-requirements-files
        run: >
          mapfile -t PYTHON_REQUIREMENTS < <(echo ${{ format(inputs.salt-python-requirements-files, inputs.salt-os-version) }}) &&
          for FILE in "${PYTHON_REQUIREMENTS[@]}"; do
          salt-pip install -r "$FILE";
          done

      - run: >-
          salt-call --local --retcode-passthrough
          --file-root=${{ github.workspace }} --pillar-root=${{ inputs.salt-pillar-root }}
          saltutil.sync_all

      # Run tests
      - run: >-
          salt-call --local --retcode-passthrough
          --log-file /var/log/salt/minion --log-file-level debug
          --file-root=${{ github.workspace }} --pillar-root=${{ inputs.salt-pillar-root }}
          state.show_sls ${{ inputs.salt-state }}

      - run: >-
          salt-call --local --retcode-passthrough
          --log-file /var/log/salt/minion --log-file-level debug
          --file-root=${{ github.workspace }} --pillar-root=${{ inputs.salt-pillar-root }}
          state.sls ${{ inputs.salt-state }} mock=True
